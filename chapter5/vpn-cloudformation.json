{
	"AWSTemplateFormatVersion" : "2010-09-09",
	"Description" : "Starts an virtual server (EC2) with OpenSwan acting as VPN IPSec endpoint.",
	"Parameters" : {
		"KeyName": {
			"Description" : "key for SSH access",
			"Type": "AWS::EC2::KeyPair::KeyName",
			"ConstraintDescription" : "Must be the name of an existing key pair."
		},
		"VPC": {
			"Description": "Just select the one and only default VPC.",
			"Type": "AWS::EC2::VPC::Id"
		},
		"Subnet": {
			"Description": "Just select one of the available subnets.",
			"Type": "AWS::EC2::Subnet::Id"
		},
		"IPSecSharedSecret": {
			"Description": "The shared secret key for IPSec.",
			"Type": "String"
		},
		"VPNUser": {
			"Description": "The VPN user.",
			"Type": "String"
		},
		"VPNPassword": {
			"Description": "The VPN password.",
			"Type": "String"
		}
	},
	"Mappings": {
		"EC2RegionMap": {
			"ap-northeast-1": {"AmazonLinuxAMIHVMEBSBacked64bit": "ami-cbf90ecb", "AmazonLinuxNATAMIHVMEBSBacked64bit": "ami-03cf3903"},
			"ap-southeast-1": {"AmazonLinuxAMIHVMEBSBacked64bit": "ami-68d8e93a", "AmazonLinuxNATAMIHVMEBSBacked64bit": "ami-b49dace6"},
			"ap-southeast-2": {"AmazonLinuxAMIHVMEBSBacked64bit": "ami-fd9cecc7", "AmazonLinuxNATAMIHVMEBSBacked64bit": "ami-e7ee9edd"},
			"eu-central-1": {"AmazonLinuxAMIHVMEBSBacked64bit": "ami-a8221fb5", "AmazonLinuxNATAMIHVMEBSBacked64bit": "ami-46073a5b"},
			"eu-west-1": {"AmazonLinuxAMIHVMEBSBacked64bit": "ami-a10897d6", "AmazonLinuxNATAMIHVMEBSBacked64bit": "ami-6975eb1e"},
			"sa-east-1": {"AmazonLinuxAMIHVMEBSBacked64bit": "ami-b52890a8", "AmazonLinuxNATAMIHVMEBSBacked64bit": "ami-fbfa41e6"},
			"us-east-1": {"AmazonLinuxAMIHVMEBSBacked64bit": "ami-1ecae776", "AmazonLinuxNATAMIHVMEBSBacked64bit": "ami-303b1458"},
			"us-west-1": {"AmazonLinuxAMIHVMEBSBacked64bit": "ami-d114f295", "AmazonLinuxNATAMIHVMEBSBacked64bit": "ami-7da94839"},
			"us-west-2": {"AmazonLinuxAMIHVMEBSBacked64bit": "ami-e7527ed7", "AmazonLinuxNATAMIHVMEBSBacked64bit": "ami-69ae8259"}
		}
	},
	"Resources": {
		"EC2Instance": {
			"Type": "AWS::EC2::Instance",
			"Properties": {
				"InstanceType": "t2.micro",
				"SecurityGroupIds": [ { "Ref" : "InstanceSecurityGroup" } ],
				"KeyName": { "Ref" : "KeyName" },
				"ImageId": {"Fn::FindInMap": ["EC2RegionMap", {"Ref": "AWS::Region"}, "AmazonLinuxNATAMIHVMEBSBacked64bit"]},
				"SubnetId": {"Ref": "Subnet"},
				"UserData": { "Fn::Base64" : { "Fn::Join" : ["", [
					"#!/bin/bash\n",
					"export IPSEC_PSK=", { "Ref" : "IPSecSharedSecret" }, "\n",
					"export VPN_USER=", { "Ref" : "VPNUser" }, "\n",
					"export VPN_PASSWORD=", { "Ref" : "VPNPassword" }, "\n",
					"export STACK_NAME=", { "Ref" : "AWS::StackName" }, "\n",
					"export REGION=", { "Ref" : "AWS::Region" }, "\n",
					"curl https://raw.githubusercontent.com/AWSinAction/code/master/chapter5/vpn-setup.sh | bash\n"
				]]}}
			},
			"Metadata": {
				"AWS::CloudFormation::Init": {
					"config": {
						"packages": {
							"yum": {
								"openswan": [],
								"xl2tpd": []
							}
						},
						"files": {
							"/etc/ppp/options.xl2tpd": {
								"content": { "Fn::Join" : ["\n", [
									"ipcp-accept-local",
									"ipcp-accept-remote",
									"ms-dns 8.8.8.8",
									"ms-dns 8.8.4.4",
									"noccp",
									"auth",
									"crtscts",
									"idle 1800",
									"mtu 1280",
									"mru 1280",
									"lock",
									"connect-delay 5000"
								]]},
								"mode": "000644",
								"owner": "root",
								"group": "root"
							}
						}
					}
				}
    		},
			"CreationPolicy": {
				"ResourceSignal": {
					"Timeout": "PT5M"
				}
			}
    	},
		"InstanceSecurityGroup": {
			"Type": "AWS::EC2::SecurityGroup",
			"Properties": {
				"GroupDescription": "Enable access to VPN server",
				"VpcId": {"Ref": "VPC"},
				"SecurityGroupIngress": [
					{
						"IpProtocol": "tcp",
						"FromPort": "22",
						"ToPort": "22",
						"CidrIp": "0.0.0.0/0"
					},
					{
						"IpProtocol": "udp",
						"FromPort": "500",
						"ToPort": "500",
						"CidrIp": "0.0.0.0/0"
					},
					{
						"IpProtocol": "udp",
						"FromPort": "1701",
						"ToPort": "1701",
						"CidrIp": "0.0.0.0/0"
					},
					{
						"IpProtocol": "udp",
						"FromPort": "4500",
						"ToPort": "4500",
						"CidrIp": "0.0.0.0/0"
					}
				]
			}
		}
	},
	"Outputs": {
		"ServerIP": {
			"Description": "Public IP address of the vpn server",
			"Value": { "Fn::GetAtt" : [ "EC2Instance", "PublicIp" ] }
		},
		"IPSecSharedSecret": {
			"Description": "The shared key for the VPN connection (IPSec)",
			"Value": { "Ref": "IPSecSharedSecret" }
		},
		"VPNUser": {
			"Description": "The username for the vpn connection",
			"Value": { "Ref": "VPNUser" }
		},
		"VPNPassword": {
			"Description": "The password for the vpn connection",
			"Value": { "Ref": "VPNPassword" }
		}
	}
}